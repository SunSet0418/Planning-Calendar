// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FormTimePicker /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    disableHours={
        Array [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
          ]
    }
    name="form-name"
    value={10}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Unknown>
          오전
</Unknown>,
        <input
          hidden={true}
          name="form-name"
          onChange={[Function]}
          type="string"
          value={10}
/>,
        <Dropdown
          mouseEnterDelay={0.15}
          mouseLeaveDelay={0.1}
          overlay={
                    <Unknown
                              onClick={[Function]}
                    >
                              <MenuItem>
                                        10
                              </MenuItem>
                              <MenuItem>
                                        11
                              </MenuItem>
                              <MenuItem>
                                        12
                              </MenuItem>
                              <MenuItem>
                                        13
                              </MenuItem>
                              <MenuItem>
                                        14
                              </MenuItem>
                              <MenuItem>
                                        15
                              </MenuItem>
                              <MenuItem>
                                        16
                              </MenuItem>
                              <MenuItem>
                                        17
                              </MenuItem>
                              <MenuItem>
                                        18
                              </MenuItem>
                              <MenuItem>
                                        19
                              </MenuItem>
                              <MenuItem>
                                        20
                              </MenuItem>
                              <MenuItem>
                                        21
                              </MenuItem>
                              <MenuItem>
                                        22
                              </MenuItem>
                              <MenuItem>
                                        23
                              </MenuItem>
                              <MenuItem>
                                        24
                              </MenuItem>
                    </Unknown>
          }
          placement="bottomLeft"
          trigger={
                    Array [
                              "click",
                            ]
          }
>
          <Unknown>
                    10
          </Unknown>
</Dropdown>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "오전",
        },
        "ref": null,
        "rendered": "오전",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "rules": Array [
              "
    margin-left: 10px;
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "hidden": true,
          "name": "form-name",
          "onChange": [Function],
          "type": "string",
          "value": 10,
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Unknown>
            10
</Unknown>,
          "mouseEnterDelay": 0.15,
          "mouseLeaveDelay": 0.1,
          "overlay": <Unknown
            onClick={[Function]}
>
            <MenuItem>
                        10
            </MenuItem>
            <MenuItem>
                        11
            </MenuItem>
            <MenuItem>
                        12
            </MenuItem>
            <MenuItem>
                        13
            </MenuItem>
            <MenuItem>
                        14
            </MenuItem>
            <MenuItem>
                        15
            </MenuItem>
            <MenuItem>
                        16
            </MenuItem>
            <MenuItem>
                        17
            </MenuItem>
            <MenuItem>
                        18
            </MenuItem>
            <MenuItem>
                        19
            </MenuItem>
            <MenuItem>
                        20
            </MenuItem>
            <MenuItem>
                        21
            </MenuItem>
            <MenuItem>
                        22
            </MenuItem>
            <MenuItem>
                        23
            </MenuItem>
            <MenuItem>
                        24
            </MenuItem>
</Unknown>,
          "placement": "bottomLeft",
          "trigger": Array [
            "click",
          ],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": 10,
          },
          "ref": null,
          "rendered": 10,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "Group": [Function],
            "__ANT_BUTTON": true,
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
    text-align: center;
    width: 40px;
    margin-left: 6px;
    padding: 0;
",
              ],
            },
            "displayName": "Styled(Button)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Unknown>
            오전
</Unknown>,
          <input
            hidden={true}
            name="form-name"
            onChange={[Function]}
            type="string"
            value={10}
/>,
          <Dropdown
            mouseEnterDelay={0.15}
            mouseLeaveDelay={0.1}
            overlay={
                        <Unknown
                                    onClick={[Function]}
                        >
                                    <MenuItem>
                                                10
                                    </MenuItem>
                                    <MenuItem>
                                                11
                                    </MenuItem>
                                    <MenuItem>
                                                12
                                    </MenuItem>
                                    <MenuItem>
                                                13
                                    </MenuItem>
                                    <MenuItem>
                                                14
                                    </MenuItem>
                                    <MenuItem>
                                                15
                                    </MenuItem>
                                    <MenuItem>
                                                16
                                    </MenuItem>
                                    <MenuItem>
                                                17
                                    </MenuItem>
                                    <MenuItem>
                                                18
                                    </MenuItem>
                                    <MenuItem>
                                                19
                                    </MenuItem>
                                    <MenuItem>
                                                20
                                    </MenuItem>
                                    <MenuItem>
                                                21
                                    </MenuItem>
                                    <MenuItem>
                                                22
                                    </MenuItem>
                                    <MenuItem>
                                                23
                                    </MenuItem>
                                    <MenuItem>
                                                24
                                    </MenuItem>
                        </Unknown>
            }
            placement="bottomLeft"
            trigger={
                        Array [
                                    "click",
                                  ]
            }
>
            <Unknown>
                        10
            </Unknown>
</Dropdown>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "오전",
          },
          "ref": null,
          "rendered": "오전",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
    margin-left: 10px;
",
              ],
            },
            "displayName": "styled.span",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "hidden": true,
            "name": "form-name",
            "onChange": [Function],
            "type": "string",
            "value": 10,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Unknown>
              10
</Unknown>,
            "mouseEnterDelay": 0.15,
            "mouseLeaveDelay": 0.1,
            "overlay": <Unknown
              onClick={[Function]}
>
              <MenuItem>
                            10
              </MenuItem>
              <MenuItem>
                            11
              </MenuItem>
              <MenuItem>
                            12
              </MenuItem>
              <MenuItem>
                            13
              </MenuItem>
              <MenuItem>
                            14
              </MenuItem>
              <MenuItem>
                            15
              </MenuItem>
              <MenuItem>
                            16
              </MenuItem>
              <MenuItem>
                            17
              </MenuItem>
              <MenuItem>
                            18
              </MenuItem>
              <MenuItem>
                            19
              </MenuItem>
              <MenuItem>
                            20
              </MenuItem>
              <MenuItem>
                            21
              </MenuItem>
              <MenuItem>
                            22
              </MenuItem>
              <MenuItem>
                            23
              </MenuItem>
              <MenuItem>
                            24
              </MenuItem>
</Unknown>,
            "placement": "bottomLeft",
            "trigger": Array [
              "click",
            ],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": 10,
            },
            "ref": null,
            "rendered": 10,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "Group": [Function],
              "__ANT_BUTTON": true,
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": true,
                "rules": Array [
                  "
    text-align: center;
    width: 40px;
    margin-left: 6px;
    padding: 0;
",
                ],
              },
              "displayName": "Styled(Button)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
