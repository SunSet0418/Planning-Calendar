// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CalendarController /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    currentMoment={"2014-02-27T10:00:00.000Z"}
    mode="월"
    onChangeMode={[Function]}
    onChangeMoment={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Button
          block={false}
          ghost={false}
          htmlType="button"
          icon="left"
          loading={false}
          onClick={[Function]}
          shape="circle"
/>,
        <Button
          block={false}
          ghost={false}
          htmlType="button"
          icon="right"
          loading={false}
          onClick={[Function]}
          shape="circle"
/>,
        <Unknown>
          2014년 / 2월
</Unknown>,
        <Unknown
          currentMode="월"
          onChangeMode={[Function]}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "block": false,
          "ghost": false,
          "htmlType": "button",
          "icon": "left",
          "loading": false,
          "onClick": [Function],
          "shape": "circle",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "block": false,
          "ghost": false,
          "htmlType": "button",
          "icon": "right",
          "loading": false,
          "onClick": [Function],
          "shape": "circle",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "2014년 / 2월",
        },
        "ref": null,
        "rendered": "2014년 / 2월",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "rules": Array [
              "
    display: inline;
",
            ],
          },
          "displayName": "Label",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "h3",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "currentMode": "월",
          "onChangeMode": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
    padding: 20px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            icon="left"
            loading={false}
            onClick={[Function]}
            shape="circle"
/>,
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            icon="right"
            loading={false}
            onClick={[Function]}
            shape="circle"
/>,
          <Unknown>
            2014년 / 2월
</Unknown>,
          <Unknown
            currentMode="월"
            onChangeMode={[Function]}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "ghost": false,
            "htmlType": "button",
            "icon": "left",
            "loading": false,
            "onClick": [Function],
            "shape": "circle",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "ghost": false,
            "htmlType": "button",
            "icon": "right",
            "loading": false,
            "onClick": [Function],
            "shape": "circle",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "2014년 / 2월",
          },
          "ref": null,
          "rendered": "2014년 / 2월",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "rules": Array [
                "
    display: inline;
",
              ],
            },
            "displayName": "Label",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "h3",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "currentMode": "월",
            "onChangeMode": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
    padding: 20px;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
