// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TaskModal /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    onCancel={[Function]}
    onDelete={[Function]}
    onOk={[Function]}
    time={"2014-02-27T10:00:00.000Z"}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "cancelButtonDisabled": false,
      "children": <Form
        colon={true}
        hideRequiredMark={false}
        id="task-form"
        labelCol={
                Object {
                        "sm": Object {
                          "span": 8,
                        },
                        "xs": Object {
                          "span": 24,
                        },
                      }
        }
        layout="horizontal"
        onSubmit={[Function]}
        wrapperCol={
                Object {
                        "sm": Object {
                          "span": 16,
                        },
                        "xs": Object {
                          "span": 24,
                        },
                      }
        }
>
        <FormItem
                hasFeedback={false}
                label="Task Name"
        >
                <Input
                        defaultValue=""
                        disabled={false}
                        name="name"
                        required={true}
                        type="text"
                />
        </FormItem>
        <FormItem
                hasFeedback={false}
                label="Start Date Time"
        >
                <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-27T10:00:00.000Z"}
                />
                <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-27T10:00:00.000Z"}
                        format="HH"
                        name="startHour"
                        onChange={[Function]}
                />
        </FormItem>
        <FormItem
                hasFeedback={false}
                label="End Date Time"
        >
                <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        open={false}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-27T10:00:00.000Z"}
                />
                <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-27T11:00:00.000Z"}
                        disabledHours={[Function]}
                        format="HH"
                        name="endHour"
                        onChange={[Function]}
                />
        </FormItem>
</Form>,
      "confirmLoading": false,
      "footer": Array [
        <Button
          block={false}
          form="task-form"
          ghost={false}
          htmlType="submit"
          loading={false}
>
          확인
</Button>,
        <Button
          block={false}
          ghost={false}
          htmlType="button"
          loading={false}
          onClick={[Function]}
>
          취소
</Button>,
      ],
      "maskTransitionName": "fade",
      "okButtonDisabled": false,
      "okType": "primary",
      "title": "일정 추가",
      "transitionName": "zoom",
      "visible": true,
      "width": 520,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <FormItem
            hasFeedback={false}
            label="Task Name"
>
            <Input
                        defaultValue=""
                        disabled={false}
                        name="name"
                        required={true}
                        type="text"
            />
</FormItem>,
          <FormItem
            hasFeedback={false}
            label="Start Date Time"
>
            <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-27T10:00:00.000Z"}
            />
            <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-27T10:00:00.000Z"}
                        format="HH"
                        name="startHour"
                        onChange={[Function]}
            />
</FormItem>,
          <FormItem
            hasFeedback={false}
            label="End Date Time"
>
            <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        open={false}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-27T10:00:00.000Z"}
            />
            <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-27T11:00:00.000Z"}
                        disabledHours={[Function]}
                        format="HH"
                        name="endHour"
                        onChange={[Function]}
            />
</FormItem>,
        ],
        "colon": true,
        "hideRequiredMark": false,
        "id": "task-form",
        "labelCol": Object {
          "sm": Object {
            "span": 8,
          },
          "xs": Object {
            "span": 24,
          },
        },
        "layout": "horizontal",
        "onSubmit": [Function],
        "wrapperCol": Object {
          "sm": Object {
            "span": 16,
          },
          "xs": Object {
            "span": 24,
          },
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Input
              defaultValue=""
              disabled={false}
              name="name"
              required={true}
              type="text"
/>,
            "hasFeedback": false,
            "label": "Task Name",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultValue": "",
              "disabled": false,
              "name": "name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PickerWrapper
                allowClear={false}
                locale={Object {}}
                name="date"
                onChange={[Function]}
                onOk={[Function]}
                onOpenChange={[Function]}
                popupStyle={Object {}}
                transitionName="slide-up"
                value={"2014-02-27T10:00:00.000Z"}
/>,
              <Unknown
                allowClear={false}
                defaultValue={"2014-02-27T10:00:00.000Z"}
                format="HH"
                name="startHour"
                onChange={[Function]}
/>,
            ],
            "hasFeedback": false,
            "label": "Start Date Time",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowClear": false,
                "locale": Object {},
                "name": "date",
                "onChange": [Function],
                "onOk": [Function],
                "onOpenChange": [Function],
                "popupStyle": Object {},
                "transitionName": "slide-up",
                "value": "2014-02-27T10:00:00.000Z",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "allowClear": false,
                "defaultValue": "2014-02-27T10:00:00.000Z",
                "format": "HH",
                "name": "startHour",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PickerWrapper
                allowClear={false}
                locale={Object {}}
                name="date"
                onChange={[Function]}
                onOk={[Function]}
                onOpenChange={[Function]}
                open={false}
                popupStyle={Object {}}
                transitionName="slide-up"
                value={"2014-02-27T10:00:00.000Z"}
/>,
              <Unknown
                allowClear={false}
                defaultValue={"2014-02-27T11:00:00.000Z"}
                disabledHours={[Function]}
                format="HH"
                name="endHour"
                onChange={[Function]}
/>,
            ],
            "hasFeedback": false,
            "label": "End Date Time",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowClear": false,
                "locale": Object {},
                "name": "date",
                "onChange": [Function],
                "onOk": [Function],
                "onOpenChange": [Function],
                "open": false,
                "popupStyle": Object {},
                "transitionName": "slide-up",
                "value": "2014-02-27T10:00:00.000Z",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "allowClear": false,
                "defaultValue": "2014-02-27T11:00:00.000Z",
                "disabledHours": [Function],
                "format": "HH",
                "name": "endHour",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "cancelButtonDisabled": false,
        "children": <Form
          colon={true}
          hideRequiredMark={false}
          id="task-form"
          labelCol={
                    Object {
                              "sm": Object {
                                "span": 8,
                              },
                              "xs": Object {
                                "span": 24,
                              },
                            }
          }
          layout="horizontal"
          onSubmit={[Function]}
          wrapperCol={
                    Object {
                              "sm": Object {
                                "span": 16,
                              },
                              "xs": Object {
                                "span": 24,
                              },
                            }
          }
>
          <FormItem
                    hasFeedback={false}
                    label="Task Name"
          >
                    <Input
                              defaultValue=""
                              disabled={false}
                              name="name"
                              required={true}
                              type="text"
                    />
          </FormItem>
          <FormItem
                    hasFeedback={false}
                    label="Start Date Time"
          >
                    <PickerWrapper
                              allowClear={false}
                              locale={Object {}}
                              name="date"
                              onChange={[Function]}
                              onOk={[Function]}
                              onOpenChange={[Function]}
                              popupStyle={Object {}}
                              transitionName="slide-up"
                              value={"2014-02-27T10:00:00.000Z"}
                    />
                    <Unknown
                              allowClear={false}
                              defaultValue={"2014-02-27T10:00:00.000Z"}
                              format="HH"
                              name="startHour"
                              onChange={[Function]}
                    />
          </FormItem>
          <FormItem
                    hasFeedback={false}
                    label="End Date Time"
          >
                    <PickerWrapper
                              allowClear={false}
                              locale={Object {}}
                              name="date"
                              onChange={[Function]}
                              onOk={[Function]}
                              onOpenChange={[Function]}
                              open={false}
                              popupStyle={Object {}}
                              transitionName="slide-up"
                              value={"2014-02-27T10:00:00.000Z"}
                    />
                    <Unknown
                              allowClear={false}
                              defaultValue={"2014-02-27T11:00:00.000Z"}
                              disabledHours={[Function]}
                              format="HH"
                              name="endHour"
                              onChange={[Function]}
                    />
          </FormItem>
</Form>,
        "confirmLoading": false,
        "footer": Array [
          <Button
            block={false}
            form="task-form"
            ghost={false}
            htmlType="submit"
            loading={false}
>
            확인
</Button>,
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
>
            취소
</Button>,
        ],
        "maskTransitionName": "fade",
        "okButtonDisabled": false,
        "okType": "primary",
        "title": "일정 추가",
        "transitionName": "zoom",
        "visible": true,
        "width": 520,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <FormItem
              hasFeedback={false}
              label="Task Name"
>
              <Input
                            defaultValue=""
                            disabled={false}
                            name="name"
                            required={true}
                            type="text"
              />
</FormItem>,
            <FormItem
              hasFeedback={false}
              label="Start Date Time"
>
              <PickerWrapper
                            allowClear={false}
                            locale={Object {}}
                            name="date"
                            onChange={[Function]}
                            onOk={[Function]}
                            onOpenChange={[Function]}
                            popupStyle={Object {}}
                            transitionName="slide-up"
                            value={"2014-02-27T10:00:00.000Z"}
              />
              <Unknown
                            allowClear={false}
                            defaultValue={"2014-02-27T10:00:00.000Z"}
                            format="HH"
                            name="startHour"
                            onChange={[Function]}
              />
</FormItem>,
            <FormItem
              hasFeedback={false}
              label="End Date Time"
>
              <PickerWrapper
                            allowClear={false}
                            locale={Object {}}
                            name="date"
                            onChange={[Function]}
                            onOk={[Function]}
                            onOpenChange={[Function]}
                            open={false}
                            popupStyle={Object {}}
                            transitionName="slide-up"
                            value={"2014-02-27T10:00:00.000Z"}
              />
              <Unknown
                            allowClear={false}
                            defaultValue={"2014-02-27T11:00:00.000Z"}
                            disabledHours={[Function]}
                            format="HH"
                            name="endHour"
                            onChange={[Function]}
              />
</FormItem>,
          ],
          "colon": true,
          "hideRequiredMark": false,
          "id": "task-form",
          "labelCol": Object {
            "sm": Object {
              "span": 8,
            },
            "xs": Object {
              "span": 24,
            },
          },
          "layout": "horizontal",
          "onSubmit": [Function],
          "wrapperCol": Object {
            "sm": Object {
              "span": 16,
            },
            "xs": Object {
              "span": 24,
            },
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Input
                defaultValue=""
                disabled={false}
                name="name"
                required={true}
                type="text"
/>,
              "hasFeedback": false,
              "label": "Task Name",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultValue": "",
                "disabled": false,
                "name": "name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <PickerWrapper
                  allowClear={false}
                  locale={Object {}}
                  name="date"
                  onChange={[Function]}
                  onOk={[Function]}
                  onOpenChange={[Function]}
                  popupStyle={Object {}}
                  transitionName="slide-up"
                  value={"2014-02-27T10:00:00.000Z"}
/>,
                <Unknown
                  allowClear={false}
                  defaultValue={"2014-02-27T10:00:00.000Z"}
                  format="HH"
                  name="startHour"
                  onChange={[Function]}
/>,
              ],
              "hasFeedback": false,
              "label": "Start Date Time",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowClear": false,
                  "locale": Object {},
                  "name": "date",
                  "onChange": [Function],
                  "onOk": [Function],
                  "onOpenChange": [Function],
                  "popupStyle": Object {},
                  "transitionName": "slide-up",
                  "value": "2014-02-27T10:00:00.000Z",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "allowClear": false,
                  "defaultValue": "2014-02-27T10:00:00.000Z",
                  "format": "HH",
                  "name": "startHour",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <PickerWrapper
                  allowClear={false}
                  locale={Object {}}
                  name="date"
                  onChange={[Function]}
                  onOk={[Function]}
                  onOpenChange={[Function]}
                  open={false}
                  popupStyle={Object {}}
                  transitionName="slide-up"
                  value={"2014-02-27T10:00:00.000Z"}
/>,
                <Unknown
                  allowClear={false}
                  defaultValue={"2014-02-27T11:00:00.000Z"}
                  disabledHours={[Function]}
                  format="HH"
                  name="endHour"
                  onChange={[Function]}
/>,
              ],
              "hasFeedback": false,
              "label": "End Date Time",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowClear": false,
                  "locale": Object {},
                  "name": "date",
                  "onChange": [Function],
                  "onOk": [Function],
                  "onOpenChange": [Function],
                  "open": false,
                  "popupStyle": Object {},
                  "transitionName": "slide-up",
                  "value": "2014-02-27T10:00:00.000Z",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "allowClear": false,
                  "defaultValue": "2014-02-27T11:00:00.000Z",
                  "disabledHours": [Function],
                  "format": "HH",
                  "name": "endHour",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<TaskModal task={task}/> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    onCancel={[Function]}
    onDelete={[Function]}
    onOk={[Function]}
    task={
        Task {
            "date": "2014-02-10T01:00:00.000Z",
            "endHour": undefined,
            "id": 1,
            "name": "귤 까기01",
            "startHour": 1,
          }
    }
    time={"2014-02-27T10:00:00.000Z"}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "cancelButtonDisabled": false,
      "children": <Form
        colon={true}
        hideRequiredMark={false}
        id="task-form"
        labelCol={
                Object {
                        "sm": Object {
                          "span": 8,
                        },
                        "xs": Object {
                          "span": 24,
                        },
                      }
        }
        layout="horizontal"
        onSubmit={[Function]}
        wrapperCol={
                Object {
                        "sm": Object {
                          "span": 16,
                        },
                        "xs": Object {
                          "span": 24,
                        },
                      }
        }
>
        <FormItem
                hasFeedback={false}
                label="Task Name"
        >
                <Input
                        defaultValue="귤 까기01"
                        disabled={false}
                        name="name"
                        required={true}
                        type="text"
                />
        </FormItem>
        <FormItem
                hasFeedback={false}
                label="Start Date Time"
        >
                <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-10T01:00:00.000Z"}
                />
                <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-10T01:00:00.000Z"}
                        format="HH"
                        name="startHour"
                        onChange={[Function]}
                />
        </FormItem>
        <FormItem
                hasFeedback={false}
                label="End Date Time"
        >
                <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        open={false}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-10T01:00:00.000Z"}
                />
                <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-10T02:00:00.000Z"}
                        disabledHours={[Function]}
                        format="HH"
                        name="endHour"
                        onChange={[Function]}
                />
        </FormItem>
</Form>,
      "confirmLoading": false,
      "footer": Array [
        <Button
          block={false}
          form="task-form"
          ghost={false}
          htmlType="submit"
          loading={false}
>
          확인
</Button>,
        <Button
          block={false}
          ghost={false}
          htmlType="button"
          loading={false}
          onClick={[Function]}
>
          취소
</Button>,
        <Button
          block={false}
          ghost={false}
          htmlType="button"
          loading={false}
          onClick={[Function]}
>
          삭제
</Button>,
      ],
      "maskTransitionName": "fade",
      "okButtonDisabled": false,
      "okType": "primary",
      "title": "일정 수정",
      "transitionName": "zoom",
      "visible": true,
      "width": 520,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <FormItem
            hasFeedback={false}
            label="Task Name"
>
            <Input
                        defaultValue="귤 까기01"
                        disabled={false}
                        name="name"
                        required={true}
                        type="text"
            />
</FormItem>,
          <FormItem
            hasFeedback={false}
            label="Start Date Time"
>
            <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-10T01:00:00.000Z"}
            />
            <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-10T01:00:00.000Z"}
                        format="HH"
                        name="startHour"
                        onChange={[Function]}
            />
</FormItem>,
          <FormItem
            hasFeedback={false}
            label="End Date Time"
>
            <PickerWrapper
                        allowClear={false}
                        locale={Object {}}
                        name="date"
                        onChange={[Function]}
                        onOk={[Function]}
                        onOpenChange={[Function]}
                        open={false}
                        popupStyle={Object {}}
                        transitionName="slide-up"
                        value={"2014-02-10T01:00:00.000Z"}
            />
            <Unknown
                        allowClear={false}
                        defaultValue={"2014-02-10T02:00:00.000Z"}
                        disabledHours={[Function]}
                        format="HH"
                        name="endHour"
                        onChange={[Function]}
            />
</FormItem>,
        ],
        "colon": true,
        "hideRequiredMark": false,
        "id": "task-form",
        "labelCol": Object {
          "sm": Object {
            "span": 8,
          },
          "xs": Object {
            "span": 24,
          },
        },
        "layout": "horizontal",
        "onSubmit": [Function],
        "wrapperCol": Object {
          "sm": Object {
            "span": 16,
          },
          "xs": Object {
            "span": 24,
          },
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Input
              defaultValue="귤 까기01"
              disabled={false}
              name="name"
              required={true}
              type="text"
/>,
            "hasFeedback": false,
            "label": "Task Name",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultValue": "귤 까기01",
              "disabled": false,
              "name": "name",
              "required": true,
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PickerWrapper
                allowClear={false}
                locale={Object {}}
                name="date"
                onChange={[Function]}
                onOk={[Function]}
                onOpenChange={[Function]}
                popupStyle={Object {}}
                transitionName="slide-up"
                value={"2014-02-10T01:00:00.000Z"}
/>,
              <Unknown
                allowClear={false}
                defaultValue={"2014-02-10T01:00:00.000Z"}
                format="HH"
                name="startHour"
                onChange={[Function]}
/>,
            ],
            "hasFeedback": false,
            "label": "Start Date Time",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowClear": false,
                "locale": Object {},
                "name": "date",
                "onChange": [Function],
                "onOk": [Function],
                "onOpenChange": [Function],
                "popupStyle": Object {},
                "transitionName": "slide-up",
                "value": "2014-02-10T01:00:00.000Z",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "allowClear": false,
                "defaultValue": "2014-02-10T01:00:00.000Z",
                "format": "HH",
                "name": "startHour",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PickerWrapper
                allowClear={false}
                locale={Object {}}
                name="date"
                onChange={[Function]}
                onOk={[Function]}
                onOpenChange={[Function]}
                open={false}
                popupStyle={Object {}}
                transitionName="slide-up"
                value={"2014-02-10T01:00:00.000Z"}
/>,
              <Unknown
                allowClear={false}
                defaultValue={"2014-02-10T02:00:00.000Z"}
                disabledHours={[Function]}
                format="HH"
                name="endHour"
                onChange={[Function]}
/>,
            ],
            "hasFeedback": false,
            "label": "End Date Time",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowClear": false,
                "locale": Object {},
                "name": "date",
                "onChange": [Function],
                "onOk": [Function],
                "onOpenChange": [Function],
                "open": false,
                "popupStyle": Object {},
                "transitionName": "slide-up",
                "value": "2014-02-10T01:00:00.000Z",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "allowClear": false,
                "defaultValue": "2014-02-10T02:00:00.000Z",
                "disabledHours": [Function],
                "format": "HH",
                "name": "endHour",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "cancelButtonDisabled": false,
        "children": <Form
          colon={true}
          hideRequiredMark={false}
          id="task-form"
          labelCol={
                    Object {
                              "sm": Object {
                                "span": 8,
                              },
                              "xs": Object {
                                "span": 24,
                              },
                            }
          }
          layout="horizontal"
          onSubmit={[Function]}
          wrapperCol={
                    Object {
                              "sm": Object {
                                "span": 16,
                              },
                              "xs": Object {
                                "span": 24,
                              },
                            }
          }
>
          <FormItem
                    hasFeedback={false}
                    label="Task Name"
          >
                    <Input
                              defaultValue="귤 까기01"
                              disabled={false}
                              name="name"
                              required={true}
                              type="text"
                    />
          </FormItem>
          <FormItem
                    hasFeedback={false}
                    label="Start Date Time"
          >
                    <PickerWrapper
                              allowClear={false}
                              locale={Object {}}
                              name="date"
                              onChange={[Function]}
                              onOk={[Function]}
                              onOpenChange={[Function]}
                              popupStyle={Object {}}
                              transitionName="slide-up"
                              value={"2014-02-10T01:00:00.000Z"}
                    />
                    <Unknown
                              allowClear={false}
                              defaultValue={"2014-02-10T01:00:00.000Z"}
                              format="HH"
                              name="startHour"
                              onChange={[Function]}
                    />
          </FormItem>
          <FormItem
                    hasFeedback={false}
                    label="End Date Time"
          >
                    <PickerWrapper
                              allowClear={false}
                              locale={Object {}}
                              name="date"
                              onChange={[Function]}
                              onOk={[Function]}
                              onOpenChange={[Function]}
                              open={false}
                              popupStyle={Object {}}
                              transitionName="slide-up"
                              value={"2014-02-10T01:00:00.000Z"}
                    />
                    <Unknown
                              allowClear={false}
                              defaultValue={"2014-02-10T02:00:00.000Z"}
                              disabledHours={[Function]}
                              format="HH"
                              name="endHour"
                              onChange={[Function]}
                    />
          </FormItem>
</Form>,
        "confirmLoading": false,
        "footer": Array [
          <Button
            block={false}
            form="task-form"
            ghost={false}
            htmlType="submit"
            loading={false}
>
            확인
</Button>,
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
>
            취소
</Button>,
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
>
            삭제
</Button>,
        ],
        "maskTransitionName": "fade",
        "okButtonDisabled": false,
        "okType": "primary",
        "title": "일정 수정",
        "transitionName": "zoom",
        "visible": true,
        "width": 520,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <FormItem
              hasFeedback={false}
              label="Task Name"
>
              <Input
                            defaultValue="귤 까기01"
                            disabled={false}
                            name="name"
                            required={true}
                            type="text"
              />
</FormItem>,
            <FormItem
              hasFeedback={false}
              label="Start Date Time"
>
              <PickerWrapper
                            allowClear={false}
                            locale={Object {}}
                            name="date"
                            onChange={[Function]}
                            onOk={[Function]}
                            onOpenChange={[Function]}
                            popupStyle={Object {}}
                            transitionName="slide-up"
                            value={"2014-02-10T01:00:00.000Z"}
              />
              <Unknown
                            allowClear={false}
                            defaultValue={"2014-02-10T01:00:00.000Z"}
                            format="HH"
                            name="startHour"
                            onChange={[Function]}
              />
</FormItem>,
            <FormItem
              hasFeedback={false}
              label="End Date Time"
>
              <PickerWrapper
                            allowClear={false}
                            locale={Object {}}
                            name="date"
                            onChange={[Function]}
                            onOk={[Function]}
                            onOpenChange={[Function]}
                            open={false}
                            popupStyle={Object {}}
                            transitionName="slide-up"
                            value={"2014-02-10T01:00:00.000Z"}
              />
              <Unknown
                            allowClear={false}
                            defaultValue={"2014-02-10T02:00:00.000Z"}
                            disabledHours={[Function]}
                            format="HH"
                            name="endHour"
                            onChange={[Function]}
              />
</FormItem>,
          ],
          "colon": true,
          "hideRequiredMark": false,
          "id": "task-form",
          "labelCol": Object {
            "sm": Object {
              "span": 8,
            },
            "xs": Object {
              "span": 24,
            },
          },
          "layout": "horizontal",
          "onSubmit": [Function],
          "wrapperCol": Object {
            "sm": Object {
              "span": 16,
            },
            "xs": Object {
              "span": 24,
            },
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Input
                defaultValue="귤 까기01"
                disabled={false}
                name="name"
                required={true}
                type="text"
/>,
              "hasFeedback": false,
              "label": "Task Name",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultValue": "귤 까기01",
                "disabled": false,
                "name": "name",
                "required": true,
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <PickerWrapper
                  allowClear={false}
                  locale={Object {}}
                  name="date"
                  onChange={[Function]}
                  onOk={[Function]}
                  onOpenChange={[Function]}
                  popupStyle={Object {}}
                  transitionName="slide-up"
                  value={"2014-02-10T01:00:00.000Z"}
/>,
                <Unknown
                  allowClear={false}
                  defaultValue={"2014-02-10T01:00:00.000Z"}
                  format="HH"
                  name="startHour"
                  onChange={[Function]}
/>,
              ],
              "hasFeedback": false,
              "label": "Start Date Time",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowClear": false,
                  "locale": Object {},
                  "name": "date",
                  "onChange": [Function],
                  "onOk": [Function],
                  "onOpenChange": [Function],
                  "popupStyle": Object {},
                  "transitionName": "slide-up",
                  "value": "2014-02-10T01:00:00.000Z",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "allowClear": false,
                  "defaultValue": "2014-02-10T01:00:00.000Z",
                  "format": "HH",
                  "name": "startHour",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <PickerWrapper
                  allowClear={false}
                  locale={Object {}}
                  name="date"
                  onChange={[Function]}
                  onOk={[Function]}
                  onOpenChange={[Function]}
                  open={false}
                  popupStyle={Object {}}
                  transitionName="slide-up"
                  value={"2014-02-10T01:00:00.000Z"}
/>,
                <Unknown
                  allowClear={false}
                  defaultValue={"2014-02-10T02:00:00.000Z"}
                  disabledHours={[Function]}
                  format="HH"
                  name="endHour"
                  onChange={[Function]}
/>,
              ],
              "hasFeedback": false,
              "label": "End Date Time",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowClear": false,
                  "locale": Object {},
                  "name": "date",
                  "onChange": [Function],
                  "onOk": [Function],
                  "onOpenChange": [Function],
                  "open": false,
                  "popupStyle": Object {},
                  "transitionName": "slide-up",
                  "value": "2014-02-10T01:00:00.000Z",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "allowClear": false,
                  "defaultValue": "2014-02-10T02:00:00.000Z",
                  "disabledHours": [Function],
                  "format": "HH",
                  "name": "endHour",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
